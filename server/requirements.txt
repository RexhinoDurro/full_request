# ðŸ”’ SECURE FORM SYSTEM: Minimal dependencies, maximum security

# Core Django and API
Django==4.2.13
djangorestframework==3.14.0
djangorestframework-simplejwt==5.3.0

# Database and deployment
psycopg[binary]==3.2.9
dj-database-url==2.1.0
gunicorn==21.2.0
whitenoise==6.6.0

# ðŸ”’ CORE SECURITY: Essential security packages only
django-cors-headers==4.3.1
django-axes==6.1.1              # âœ… Brute force protection
django-csp==3.7                 # âœ… Content Security Policy
django-cryptography==1.1        # âœ… Field-level encryption
django-auditlog==2.3.0          # âœ… Audit logging
bleach==6.1.0                   # âœ… Input sanitization
cryptography==42.0.8            # âœ… Encryption

# ðŸ”’ INPUT VALIDATION: Secure form handling
html5lib==1.1
defusedxml==0.7.1
validators==0.22.0

# Environment and configuration
python-dotenv==1.0.0

# SSL/Security certificates
certifi==2023.7.22

# ðŸ”’ EXCEL EXPORT: For admin data export only
openpyxl==3.1.2

# Optional: Redis cache support (if REDIS_URL is available)
# Uncomment the next line if you want Redis caching
# django-redis==5.4.0
# redis==5.0.1

# ðŸ”’ NOTE: Ultra-minimal secure form system
# This configuration provides:
# - Encrypted form data storage
# - Brute force protection  
# - Content Security Policy
# - Comprehensive audit logging
# - Input sanitization and validation
# - Built-in rate limiting (no external dependencies)
# - No file uploads for maximum security
# - No email functionality to reduce attack surface